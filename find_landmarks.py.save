import Help_functions as hf
import robot
from picamera2 import Picamera2, Preview
import cv2
import time
import numpy as np
no
arlo = robot.Robot()

picam2 = Picamera2()
camera_config = picam2.create_preview_configuration()
picam2.configure(camera_config)
#picam2.start_preview(Preview.QTGL)
picam2.start()
time.sleep(2)

dictionary_type = cv2.aruco.DICT_6X6_250
dictionary = cv2.aruco.Dictionary_get(dictionary_type)

ids = None
while True:
	picam2.capture_file("img.jpg")
	img = cv2.imread("img.jpg")
	aruco_corners, ids, rejectedImgPoints = cv2.aruco.detectMarkers(img, dictionary)
	print(ids)



	hf.TurnXDegLeft(arlo, 10)
	time.sleep(0.5)



rvecs, tvecs, objPoints = cv2.aruco.estimatePoseSingleMarkers(aruco_corners, arucoMarkerLength, intrinsic_matrix, distortion_coeffs)

